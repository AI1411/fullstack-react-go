services:
  gen-api:
    container_name: gen-api
    build:
      context: .
      dockerfile: build/api/Dockerfile-dev
    command: air -c .air.toml
    ports:
      - "8080:8080"
      - "2345:2345"
    depends_on:
      - db
      - db-test
    env_file:
      - .env
    volumes:
      - ./backend:/go/src/
    networks:
      - gen-network
    restart: unless-stopped
  db:
    build:
      context: .
      dockerfile: build/postgres/Dockerfile
    container_name: db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gen
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gen-network
    restart: unless-stopped
  db-test:
    image: postgres:17-alpine
    container_name: db-test
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gen_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - gen-network
    restart: unless-stopped
  migration:
    container_name: migration
    image: migrate/migrate
    entrypoint: /bin/sh
    tty: true
    volumes:
      - ./backend/migrations:/migrations
    working_dir: /migrations
    depends_on:
      - db
      - db-test
    networks:
      - gen-network
  mailhog:
    container_name: mailhog
    platform: linux/amd64  # apple silicon以外の環境で実行する場合は不要
    image: mailhog/mailhog:v1.0.0
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    environment:
      - MH_STORAGE=maildir
      - MH_MAILDIR_PATH=/maildir
    volumes:
      - mailhog_data:/maildir

networks:
  gen-network:
    driver: bridge

volumes:
  postgres_data:
  postgres_test_data:
  mailhog_data: