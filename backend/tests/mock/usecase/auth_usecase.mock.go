// Code generated by MockGen. DO NOT EDIT.
// Source: auth_usecase.go
//
// Generated by this command:
//
//	mockgen -source=auth_usecase.go -destination=../../tests/mock/usecase/auth_usecase.mock.go
//

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	model "github.com/AI1411/fullstack-react-go/internal/domain/model"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthUsecase is a mock of AuthUsecase interface.
type MockAuthUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAuthUsecaseMockRecorder
	isgomock struct{}
}

// MockAuthUsecaseMockRecorder is the mock recorder for MockAuthUsecase.
type MockAuthUsecaseMockRecorder struct {
	mock *MockAuthUsecase
}

// NewMockAuthUsecase creates a new mock instance.
func NewMockAuthUsecase(ctrl *gomock.Controller) *MockAuthUsecase {
	mock := &MockAuthUsecase{ctrl: ctrl}
	mock.recorder = &MockAuthUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthUsecase) EXPECT() *MockAuthUsecaseMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockAuthUsecase) GenerateToken(user *model.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockAuthUsecaseMockRecorder) GenerateToken(user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockAuthUsecase)(nil).GenerateToken), user)
}

// ValidateEmailVarificationToken mocks base method.
func (m *MockAuthUsecase) ValidateEmailVarificationToken(ctx context.Context, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateEmailVarificationToken", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateEmailVarificationToken indicates an expected call of ValidateEmailVarificationToken.
func (mr *MockAuthUsecaseMockRecorder) ValidateEmailVarificationToken(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateEmailVarificationToken", reflect.TypeOf((*MockAuthUsecase)(nil).ValidateEmailVarificationToken), ctx, token)
}
