// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameOperationLog = "operation_logs"

// OperationLog mapped from table <operation_logs>
type OperationLog struct {
	ID              int64      `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true;comment:監査ログID（主キー、自動掲番）" json:"id"`                                                                               // 監査ログID（主キー、自動掲番）
	UserID          *string    `gorm:"column:user_id;type:uuid;index:idx_operation_logs_user_id,priority:1;comment:ユーザーID（外部キー、ユーザーテーブルのID）" json:"user_id"`                                                 // ユーザーID（外部キー、ユーザーテーブルのID）
	Action          string     `gorm:"column:action;type:character varying(100);not null;index:idx_operation_logs_action,priority:1;comment:実行されたアクション（例: create, update, delete）" json:"action"`            // 実行されたアクション（例: create, update, delete）
	ResourceType    *string    `gorm:"column:resource_type;type:character varying(100);index:idx_operation_logs_resource_type,priority:1;comment:リソースの種類（例: user, organization, role）" json:"resource_type"` // リソースの種類（例: user, organization, role）
	ResourceID      *string    `gorm:"column:resource_id;type:character varying(100);index:idx_operation_logs_resource_id,priority:1;comment:リソースID（アクションが適用されたリソースのID）" json:"resource_id"`                 // リソースID（アクションが適用されたリソースのID）
	Endpoint        *string    `gorm:"column:endpoint;type:character varying(500);index:idx_operation_logs_endpoint,priority:1;comment:APIエンドポイント（例: /api/users, /api/organizations）" json:"endpoint"`       // APIエンドポイント（例: /api/users, /api/organizations）
	Method          *string    `gorm:"column:method;type:character varying(10);index:idx_operation_logs_method,priority:1;comment:HTTPメソッド（例: GET, POST, PUT, DELETE）" json:"method"`                        // HTTPメソッド（例: GET, POST, PUT, DELETE）
	IPAddress       *string    `gorm:"column:ip_address;type:inet;comment:ユーザーのIPアドレス" json:"ip_address"`                                                                                                    // ユーザーのIPアドレス
	UserAgent       *string    `gorm:"column:user_agent;type:text;comment:ユーザーエージェント情報（ブラウザやデバイス情報）" json:"user_agent"`                                                                                      // ユーザーエージェント情報（ブラウザやデバイス情報）
	RequestData     *string    `gorm:"column:request_data;type:jsonb;index:idx_operation_logs_request_data,priority:1;comment:リクエストデータ（JSON形式）" json:"request_data"`                                         // リクエストデータ（JSON形式）
	ResponseStatus  *int32     `gorm:"column:response_status;type:integer;index:idx_operation_logs_response_status,priority:1;comment:レスポンスステータスコード（例: 200, 404, 500）" json:"response_status"`               // レスポンスステータスコード（例: 200, 404, 500）
	ExecutionTimeMs *int32     `gorm:"column:execution_time_ms;type:integer;index:idx_operation_logs_execution_time_ms,priority:1;comment:リクエストの実行時間（ミリ秒単位）" json:"execution_time_ms"`                       // リクエストの実行時間（ミリ秒単位）
	CreatedAt       *time.Time `gorm:"column:created_at;type:timestamp with time zone;index:idx_operation_logs_created_at,priority:1;default:CURRENT_TIMESTAMP;comment:監査ログの作成日時" json:"created_at"`         // 監査ログの作成日時
}

// TableName OperationLog's table name
func (*OperationLog) TableName() string {
	return TableNameOperationLog
}
