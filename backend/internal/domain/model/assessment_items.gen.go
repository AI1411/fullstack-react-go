// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameAssessmentItem = "assessment_items"

// AssessmentItem mapped from table <assessment_items>
type AssessmentItem struct {
	ID                int32          `gorm:"column:id;type:integer;primaryKey;autoIncrement:true;comment:査定項目ID - 主キー" json:"id"`                                                              // 査定項目ID - 主キー
	AssessmentID      int32          `gorm:"column:assessment_id;type:integer;not null;index:idx_assessment_items_assessment_id,priority:1;comment:査定ID - 関連する査定のID" json:"assessment_id"`     // 査定ID - 関連する査定のID
	ItemName          string         `gorm:"column:item_name;type:character varying(100);not null;comment:項目名 - 査定項目の名称" json:"item_name"`                                                     // 項目名 - 査定項目の名称
	FacilityTypeID    *int32         `gorm:"column:facility_type_id;type:integer;index:idx_assessment_items_facility_type_id,priority:1;comment:施設種別ID - 被害を受けた施設の種別" json:"facility_type_id"` // 施設種別ID - 被害を受けた施設の種別
	DamageLevelID     *int32         `gorm:"column:damage_level_id;type:integer;index:idx_assessment_items_damage_level_id,priority:1;comment:被害程度ID - 被害の程度" json:"damage_level_id"`          // 被害程度ID - 被害の程度
	DamageDescription string         `gorm:"column:damage_description;type:text;not null;comment:被害説明 - 被害状況の詳細説明" json:"damage_description"`                                                  // 被害説明 - 被害状況の詳細説明
	DamageAmount      float64        `gorm:"column:damage_amount;type:numeric(15,2);not null;comment:被害金額 - 項目ごとの被害金額" json:"damage_amount"`                                                   // 被害金額 - 項目ごとの被害金額
	ApprovedAmount    *float64       `gorm:"column:approved_amount;type:numeric(15,2);comment:承認金額 - 項目ごとの承認金額" json:"approved_amount"`                                                        // 承認金額 - 項目ごとの承認金額
	LocationLatitude  *float64       `gorm:"column:location_latitude;type:numeric(10,8);comment:位置（緯度） - 被害箇所の緯度" json:"location_latitude"`                                                    // 位置（緯度） - 被害箇所の緯度
	LocationLongitude *float64       `gorm:"column:location_longitude;type:numeric(11,8);comment:位置（経度） - 被害箇所の経度" json:"location_longitude"`                                                  // 位置（経度） - 被害箇所の経度
	Notes             *string        `gorm:"column:notes;type:text;comment:備考 - 査定項目に関する備考やメモ" json:"notes"`                                                                                   // 備考 - 査定項目に関する備考やメモ
	CreatedAt         time.Time      `gorm:"column:created_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:作成日時 - レコード作成日時" json:"created_at"`                     // 作成日時 - レコード作成日時
	UpdatedAt         time.Time      `gorm:"column:updated_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:更新日時 - レコード最終更新日時" json:"updated_at"`                   // 更新日時 - レコード最終更新日時
	DeletedAt         gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone;comment:削除日時 - 論理削除用のタイムスタンプ" json:"deleted_at"`                                                   // 削除日時 - 論理削除用のタイムスタンプ
}

// TableName AssessmentItem's table name
func (*AssessmentItem) TableName() string {
	return TableNameAssessmentItem
}
