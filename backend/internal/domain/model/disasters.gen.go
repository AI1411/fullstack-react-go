// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameDisaster = "disasters"

// Disaster mapped from table <disasters>
type Disaster struct {
	ID                    string         `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:災害ID - 主キー" json:"id"`                                                                                                              // 災害ID - 主キー
	DisasterCode          string         `gorm:"column:disaster_code;type:character varying(20);not null;comment:災害コード - 管理用の一意識別子 (例: D2024-001)" json:"disaster_code"`                                                                             // 災害コード - 管理用の一意識別子 (例: D2024-001)
	Name                  string         `gorm:"column:name;type:character varying(100);not null;comment:災害名 - 災害の名称" json:"name"`                                                                                                                   // 災害名 - 災害の名称
	PrefectureID          int32          `gorm:"column:prefecture_id;type:integer;not null;index:idx_disasters_prefecture_id,priority:1;comment:都道府県ID - 災害が発生した都道府県のID" json:"prefecture_id"`                                                       // 都道府県ID - 災害が発生した都道府県のID
	OccurredAt            time.Time      `gorm:"column:occurred_at;type:timestamp with time zone;not null;index:idx_disasters_occurred_at,priority:1;comment:発生日時 - 災害が発生した日時" json:"occurred_at"`                                                   // 発生日時 - 災害が発生した日時
	Summary               string         `gorm:"column:summary;type:text;not null;comment:被害概要 - 災害による被害の詳細説明" json:"summary"`                                                                                                                       // 被害概要 - 災害による被害の詳細説明
	DisasterType          string         `gorm:"column:disaster_type;type:character varying(30);not null;index:idx_disasters_disaster_type,priority:1;comment:災害種別 - 洪水, 地滑り, 雹害, 干ばつ, 風害, 地震, 霜害, 病害虫など" json:"disaster_type"`                      // 災害種別 - 洪水, 地滑り, 雹害, 干ばつ, 風害, 地震, 霜害, 病害虫など
	Status                string         `gorm:"column:status;type:disaster_status;not null;index:idx_disasters_status,priority:1;default:pending;comment:状態 - pending(未着手), under_review(審査中), in_progress(対応中), completed(完了)のいずれか" json:"status"` // 状態 - pending(未着手), under_review(審査中), in_progress(対応中), completed(完了)のいずれか
	ImpactLevel           string         `gorm:"column:impact_level;type:character varying(20);not null;comment:被害レベル - 軽微, 中程度, 深刻, 甚大などの被害度合い" json:"impact_level"`                                                                                // 被害レベル - 軽微, 中程度, 深刻, 甚大などの被害度合い
	AffectedAreaSize      *float64       `gorm:"column:affected_area_size;type:numeric(10,2);comment:被害面積 - ヘクタール (ha) 単位での被害エリアの広さ" json:"affected_area_size"`                                                                                      // 被害面積 - ヘクタール (ha) 単位での被害エリアの広さ
	EstimatedDamageAmount *float64       `gorm:"column:estimated_damage_amount;type:numeric(15,2);comment:被害推定金額 - 円単位での被害総額" json:"estimated_damage_amount"`                                                                                        // 被害推定金額 - 円単位での被害総額
	CreatedAt             time.Time      `gorm:"column:created_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:作成日時 - レコード作成日時" json:"created_at"`                                                                       // 作成日時 - レコード作成日時
	UpdatedAt             time.Time      `gorm:"column:updated_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:更新日時 - レコード最終更新日時" json:"updated_at"`                                                                     // 更新日時 - レコード最終更新日時
	DeletedAt             gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone;comment:削除日時 - 論理削除用のタイムスタンプ" json:"deleted_at"`                                                                                                     // 削除日時 - 論理削除用のタイムスタンプ
	Prefecture            Prefecture     `json:"prefecture"`
}

// TableName Disaster's table name
func (*Disaster) TableName() string {
	return TableNameDisaster
}
