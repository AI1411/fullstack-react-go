// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameDisaster = "disasters"

// Disaster mapped from table <disasters>
type Disaster struct {
	ID                    string             `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:災害ID - 主キー" json:"id"`                                                                                                              // 災害ID - 主キー
	Name                  string             `gorm:"column:name;type:character varying(100);not null;comment:災害名 - 災害の名称" json:"name"`                                                                                                                   // 災害名 - 災害の名称
	MunicipalityID        int32              `gorm:"column:municipality_id;type:integer;not null;index:idx_disasters_municipality_id,priority:1;comment:自治体ID - 関連する自治体のID" json:"municipality_id"`                                                      // 自治体ID - 関連する自治体のID
	OccurredAt            time.Time          `gorm:"column:occurred_at;type:timestamp with time zone;not null;index:idx_disasters_occurred_at,priority:1;comment:発生日時 - 災害が発生した日時" json:"occurred_at"`                                                   // 発生日時 - 災害が発生した日時
	Summary               string             `gorm:"column:summary;type:text;not null;comment:被害概要 - 災害による被害の詳細説明" json:"summary"`                                                                                                                       // 被害概要 - 災害による被害の詳細説明
	WorkCategoryID        int64              `gorm:"column:work_category_id;type:bigint;not null;index:idx_disasters_work_category_id,priority:1;comment:工種区分ID - 関連する作業カテゴリのID" json:"work_category_id"`                                                // 工種区分ID - 関連する作業カテゴリのID
	Status                string             `gorm:"column:status;type:disaster_status;not null;index:idx_disasters_status,priority:1;default:pending;comment:状態 - pending(未着手), under_review(審査中), in_progress(対応中), completed(完了)のいずれか" json:"status"` // 状態 - pending(未着手), under_review(審査中), in_progress(対応中), completed(完了)のいずれか
	AffectedAreaSize      *float64           `gorm:"column:affected_area_size;type:numeric(10,2);comment:被害面積 - ヘクタール (ha) 単位での被害エリアの広さ" json:"affected_area_size"`                                                                                      // 被害面積 - ヘクタール (ha) 単位での被害エリアの広さ
	EstimatedDamageAmount *float64           `gorm:"column:estimated_damage_amount;type:numeric(15,2);comment:被害推定金額 - 円単位での被害総額" json:"estimated_damage_amount"`                                                                                        // 被害推定金額 - 円単位での被害総額
	Latitude              *float64           `gorm:"column:latitude;type:numeric(10,8);index:idx_disasters_latitude_longitude,priority:1;comment:緯度 - 災害発生地点の緯度座標" json:"latitude"`                                                                      // 緯度 - 災害発生地点の緯度座標
	Longitude             *float64           `gorm:"column:longitude;type:numeric(11,8);index:idx_disasters_latitude_longitude,priority:2;comment:経度 - 災害発生地点の経度座標" json:"longitude"`                                                                    // 経度 - 災害発生地点の経度座標
	Address               *string            `gorm:"column:address;type:text;comment:住所 - Google Maps APIから取得した住所情報" json:"address"`                                                                                                                     // 住所 - Google Maps APIから取得した住所情報
	PlaceID               *string            `gorm:"column:place_id;type:character varying(255);index:idx_disasters_place_id,priority:1;comment:Google Place ID - Google Maps APIの場所識別子" json:"place_id"`                                                // Google Place ID - Google Maps APIの場所識別子
	CreatedAt             time.Time          `gorm:"column:created_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:作成日時 - レコード作成日時" json:"created_at"`                                                                       // 作成日時 - レコード作成日時
	UpdatedAt             time.Time          `gorm:"column:updated_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:更新日時 - レコード最終更新日時" json:"updated_at"`                                                                     // 更新日時 - レコード最終更新日時
	DeletedAt             gorm.DeletedAt     `gorm:"column:deleted_at;type:timestamp with time zone;comment:削除日時 - 論理削除用のタイムスタンプ" json:"deleted_at"`                                                                                                     // 削除日時 - 論理削除用のタイムスタンプ
	Municipality          Municipality       `json:"municipality"`
	Timelines             []Timeline         `json:"timelines"`
	DisasterDocuments     []DisasterDocument `json:"disaster_documents"`
	WorkCategory          WorkCategory       `json:"work_category"`
}

// TableName Disaster's table name
func (*Disaster) TableName() string {
	return TableNameDisaster
}
