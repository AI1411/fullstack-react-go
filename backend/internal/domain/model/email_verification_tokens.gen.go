// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameEmailVerificationToken = "email_verification_tokens"

// EmailVerificationToken mapped from table <email_verification_tokens>
type EmailVerificationToken struct {
	ID        string     `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:トークンの一意な識別子" json:"id"`                                                                 // トークンの一意な識別子
	UserID    string     `gorm:"column:user_id;type:uuid;not null;index:idx_email_verification_tokens_user_id,priority:1;comment:関連するユーザーのID" json:"user_id"`                            // 関連するユーザーのID
	Token     string     `gorm:"column:token;type:character varying(255);not null;index:idx_email_verification_tokens_token,priority:1;comment:メール認証トークン" json:"token"`                  // メール認証トークン
	Email     string     `gorm:"column:email;type:character varying(255);not null;comment:認証対象のメールアドレス" json:"email"`                                                                    // 認証対象のメールアドレス
	ExpiresAt time.Time  `gorm:"column:expires_at;type:timestamp with time zone;not null;index:idx_email_verification_tokens_expires_at,priority:1;comment:トークンの有効期限" json:"expires_at"` // トークンの有効期限
	UsedAt    *time.Time `gorm:"column:used_at;type:timestamp with time zone;comment:トークンが使用された日時" json:"used_at"`                                                                       // トークンが使用された日時
	IsUsed    bool       `gorm:"column:is_used;type:boolean;not null;comment:トークンが使用されたかどうか" json:"is_used"`                                                                             // トークンが使用されたかどうか
	CreatedAt time.Time  `gorm:"column:created_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:トークンの作成日時" json:"created_at"`                                 // トークンの作成日時
}

// TableName EmailVerificationToken's table name
func (*EmailVerificationToken) TableName() string {
	return TableNameEmailVerificationToken
}
